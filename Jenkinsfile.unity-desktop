#!groovy
@Library('jenkins-shared-library@dev') _

/**
 * @author 潘维吉
 * @description 核心Pipeline代码 针对桌面端项目CI/CD的脚本
 * 注意 本文件在Git位置和名称不能随便改动 配置在jenkins里
 */
// Pipeline需要安装的插件

// 根据不同环境项目配置不同参数
def map = [:]

// 保持构建的最大个数
map.put('build_num_keep', 1)

// 默认要构建的Git分支
map.put('default_git_branch', 'master')

// 是否Pipeline内脚本钉钉通知  总开关
map.put('is_ding_notice', false)
// 是否通知变更记录
map.put('is_notice_change_log', false)
// 是否在生产环境发布成功后自动给Git仓库打Tag版本和生成变更记录
map.put('is_git_tag', false)

// 项目标签或项目简称
map.put('project_tag', ' ')

// jenkins分布式构建节点label名称
map.put('jenkins_node', 'linux')

// 构建环境变量
map.put('nodejs', 'Node14')

// 相关信任标识
map.put('ci_git_credentials_id', '45392b97-5c21-4451-b323-bbf104f70e51')
map.put('git_credentials_id', '45392b97-5c21-4451-b323-bbf104f70e51')
map.put('ding_talk_credentials_id', 'ba0ebec7-73ad-4a26-af8b-d15c470b1328') // 支持多个群通知 逗号,分割 不要空格


// 调用核心通用Pipeline
desktopSharedLibrary(map)


// ---------------------------------------------------------------------------------------------------------------------

// https://github.com/DreamPWJ/jenkins-shared-library.git  Jenkinsfile.unity-desktop

/*


test-unity-desktop
测试Unity桌面端流水线
JSON_PARAMS:
{
    "PROJECT_TYPE" : "3",
    "REPO_URL" : "https://gitlab.com/gableroux/unity3d-gitlab-ci-example.git",
    "PROJECT_CHINESE_NAME" : "测试Unity"
}

*/

# Author: 潘维吉
# Version 1.0.0
# Description: 源码直接部署 无需打包 只需要压缩上传到服务器上执行自定义命令启动

# 构建镜像docker build --build-arg PROJECT_NAME=app 或 docker-compose.yaml args参数传入
ARG JDK_PUBLISHER
ARG JDK_VERSION
ARG DEPLOY_FOLDER
ARG PROJECT_NAME
ARG EXPOSE_PORT
ARG CUSTOM_STARTUP_COMMAND

# Spring官方推荐的JDK提供商: https://bell-sw.com/libericajdk/
# JDK基础镜像 默认值变量方式 ${JDK_VERSION:-21}
FROM ${JDK_PUBLISHER}:${JDK_VERSION}

# 多阶段构建镜像 从上一个镜像内复制环境到本镜像
# 示例 COPY --from=0 / /   下行注释的KEY值动态替换
#COPY-MULTISTAGE-BUILD-IMAGES

# 设置镜像元数据，利用 docker inspect [镜像名称|镜像ID],即可查看
#LABEL author="潘维吉"

# Docker 将此路径用作所有后续命令的默认位置
WORKDIR /app

# 挂载数据卷 docker删除后数据不丢失 docker run -v 映射
#VOLUME /logs

# 指定切换用户
USER root

# 设置时区
ENV TZ=Asia/Shanghai
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

ARG SOURCE_CODE_FILE=source-code

# 动态下载安装相关依赖 下行注释的KEY值动态替换
#DOCKER-FILE-RUN-COMMAND

# 复制代码到容器 ADD 会自动解压，COPY 不会解压
ADD ${SOURCE_CODE_FILE}.tar.gz .

# 解压文件到当前文件夹下并删除压缩文件
#RUN tar -xzvf ${SOURCE_CODE_FILE}.tar.gz --strip-components 2  >/dev/null 2>&1  \
# && rm -f ${SOURCE_CODE_FILE}.tar.gz \
# && ls -l
# 移动文件并去掉顶层目录
RUN mv /app/${SOURCE_CODE_FILE}/* /app/  \
 && rm -rf /app/${SOURCE_CODE_FILE} \
 && ls -l

# 对外暴露端口 k8s在yaml设置端口
EXPOSE  $EXPOSE_PORT

# 健康检查 HTTP响应200为健康 如果服务不可用或未响应，Docker可以标记容器为不健康，并根据配置采取行动，如自动重启容器
HEALTHCHECK --start-period=10s --interval=30s --timeout=30s --retries=3 \
    CMD curl --fail http://localhost:$DOCKER_SERVICE_PORT || exit 1

# 运行jar包命令  启动命令 java -jar app.jar  在k8s动态设置启动参数
CMD $CUSTOM_STARTUP_COMMAND  $JAVA_OPTS
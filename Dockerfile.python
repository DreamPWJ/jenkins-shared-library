# Use an official Python runtime as a parent image
ARG PYTHON_VERSION

#FROM python:${PYTHON_VERSION}-slim
FROM  ubuntu:latest

# Set working directory
WORKDIR /app

# 指定切换用户
USER root

# 设置时区
ENV TZ=Asia/Shanghai
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

# Set environment variables
#ENV PIP_CACHE_DIR=/pip-cache \
#    PIP_NO_CACHE_DIR=false \
#    PYTHONDONTWRITEBYTECODE=1 \
#    PYTHONUNBUFFERED=1

# 挂载数据卷 docker删除后数据不丢失 docker run -v 映射
#VOLUME $PIP_CACHE_DIR

# Create pip cache directory
#RUN mkdir -p /pip-cache && \
#    chmod -R 777 /pip-cache

# 设置非交互式安装以避免提示
ENV DEBIAN_FRONTEND=noninteractive

# 更新包列表并安装基本工具
RUN apt-get update && apt-get install -y \
    curl \
    wget \
    gnupg \
    lsb-release \
    software-properties-common

RUN python3 -V

ARG INSTALL_PACKAGES
# Install system dependencies and clean up
RUN if [ -n "$INSTALL_PACKAGES" ]; then \
         echo "动态安装依赖 $INSTALL_PACKAGES" && \
         apt install -y --no-install-recommends $INSTALL_PACKAGES && \
         rm -rf /var/lib/apt/lists/*; \
    fi

# Copy requirements.txt (if it exists) to calculate hash
COPY requirements.txt* /app/
COPY requirement.txt* /app/


#RUN mv requirement.txt requirements.txt || true && pip install -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple
RUN pwd && ls

# Copy application code
COPY . /app

# Default command
CMD ["python", "app.py"]
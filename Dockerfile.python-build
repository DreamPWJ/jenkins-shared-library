# Use an official Python runtime as a parent image
ARG PYTHON_VERSION
ARG INSTALL_PACKAGES

FROM python:${PYTHON_VERSION}-slim

# Set working directory
WORKDIR /app

# Set environment variables
ENV PIP_CACHE_DIR=/pip-cache \
    PIP_NO_CACHE_DIR=false \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1

# 挂载数据卷 docker删除后数据不丢失 docker run -v 映射
VOLUME $PIP_CACHE_DIR

# Create pip cache directory
RUN mkdir -p /pip-cache && \
    chmod -R 777 /pip-cache

# Install system dependencies and clean up
RUN if [ -n "$INSTALL_PACKAGES" ]; then \
         echo "动态安装依赖 $INSTALL_PACKAGES" && \
         sed -i 's/deb.debian.org/mirrors.ustc.edu.cn/g'  /etc/apt/sources.list && \
         apt-get clean && \
         apt-get update && \
         apt-get install -y --no-install-recommends $INSTALL_PACKAGES || true \
         rm -rf /var/lib/apt/lists/*; \
    fi

# Copy requirements.txt (if it exists) to calculate hash
COPY requirements.txt* /app/
COPY requirement.txt* /app/


RUN mv requirement.txt requirements.txt || true && pip install --no-warn-script-location -r requirements.txt

# Copy application code
COPY . /app

# Default command
CMD ["python", "app.py"]
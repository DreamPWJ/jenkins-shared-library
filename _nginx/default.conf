# 正反向代理和负载均衡配置 IDEA内Nginx Configuration检测配置正确性
# 执行命令 sudo nginx -t -c /etc/nginx/nginx.conf nginx配置有效性 , 避免上线导致服务器出错。 宿主机安装进入/usr/local/nginx/sbin 执行./nginx -t 命令
# docker exec proxy-nginx nginx -t -c /etc/nginx/nginx.conf
# docker exec proxy-nginx nginx -s reload  重新加载 配置生效 用户无感知  静态资源部署不需要重启

# 负载均衡的反向代理
# 默认是加权轮询按请求时间分配不同的服务器上 weight访问权重 weight=1权重越大被分配到的几率也越大
# down不参与负载均衡 backup备份机器backup不能和ip_hash一起使用 其他服务都不可用才分配
# 每个请求按访问ip_hash结果分配，每个访客固定访问一个后端服务器，可以解决session的问题 当ip hash失效时，会退化为轮询策略

upstream h5-nginx-server {
   server 172.16.0.100:8002;
   server 172.16.0.101:8002;
 }

upstream app-api-tomcat-server {
   #ip_hash; # 解决seesion共享问题  缺点会导致负载极不均匀 性能不佳
   server 172.16.0.100:8080 weight=1; # 在第一个服务上设置weight=1权重 保障ip_hash模式下负载均衡
   server 172.16.0.101:8080;
 }

# 捕获所有未指定域名的请求
server {
   listen 80 default_server;
   listen [::]:80 default_server;
   server_name _;

# 监控信息  需要开启扩展模块 --with-http_stub_status_module
#   location /nginx_status {
#   　　stub_status on;
#   　　access_log  off;
#      allow       127.0.0.1;
#      allow       172.0.0.0/8;
#      deny        all;
#   　}

#  nginx-vts更强大的监控
#  vhost_traffic_status on;
#  location /nginx_status {
#      vhost_traffic_status_display;
#      vhost_traffic_status_display_format html;
#  }
   # return 444;  # 直接关闭连接，不返回任何内容
   # 或者你也可以选择返回403 Forbidden
    return 403;
   # 或者重定向到某个页面
   # return 301 http://example.com;
}


server {
  listen 80;
  listen [::]:80;
  listen 443 ssl;
  listen [::]:443 ssl;
  http2 on;
  server_name  admin.panweiji.com;
  ssl_certificate /etc/letsencrypt/live/admin.panweiji.com/fullchain.pem; #指定服务器完整链证书路径
  ssl_certificate_key /etc/letsencrypt/live/admin.panweiji.com/privkey.pem; #指定私钥证书路径 用于加密/解密数据
  ssl_session_timeout  10m;
  ssl_prefer_server_ciphers on; #在使用SSLv3和TLS协议时指定服务器的加密算法要优先于客户端的加密算法

  # 属性allow和deny配合指定IP白名单才能访问
  #allow 172.16.0.1/24;
  #allow 192.168.0.1;
  #deny all;

  # 让http请求重定向到https请求
  if ( $scheme = http ) {
      return 301 https://$server_name$request_uri;
  }
  # 如果请求的不是指定域名，防止非法访问, 则返回403 Forbidden
  if ( $host != $server_name ) {
      return 403;
  }
  access_log off;

  location / {
    proxy_pass http://h5-nginx-server; # 代理地址 proxy_pass加根路径/ 可去掉location的前缀
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
  }

  # redirect server error pages to the static page /50x.html
  error_page   500 502 503 504  /50x.html;
  location = /50x.html {
    root   /usr/share/nginx/html;
  }
}


server {
  listen 80;
  listen [::]:80;
  listen 443 ssl;
  listen [::]:443 ssl;
  http2 on;
  server_name  app-api.panweiji.com;
  ssl_certificate /etc/nginx/ssl/app-api.panweiji.com.pem; #指定服务器完整链证书路径
  ssl_certificate_key /etc/nginx/ssl/app-api.panweiji.com.key; #指定私钥证书路径 用于加密/解密数据
  ssl_session_timeout  10m;
  ssl_prefer_server_ciphers on; #在使用SSLv3和TLS协议时指定服务器的加密算法要优先于客户端的加密算法

  # 让http请求重定向到https请求
  if ( $scheme = http ) {
      return 301 https://$server_name$request_uri;
  }
  # 如果请求的不是指定域名，防止非法访问, 则返回403 Forbidden
  if ( $host != $server_name ) {
      return 403;
  }
  access_log off;

  location / {
    limit_req zone=ip_limit burst=102 delay=52; # 限流 同一个客户端burst漏桶的大小,超出废弃 delay桶内第几个+1请求开始延迟请求
    proxy_pass http://app-api-tomcat-server; # 代理地址
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # 后端的Web服务器可以通过X-Forwarded-For获取用户真实IP
    proxy_set_header X-Forwarded-Proto https; # 如果访问的tomcat也是https 需要配置
    proxy_set_header Upgrade $http_upgrade; # wss协议需要配置
    proxy_set_header Connection "upgrade"; # wss协议需要配置
  }

  location /actuator/shutdown {  # 特殊API接口屏蔽
    return 403;
  }

  # redirect server error pages to the static page /50x.html
  error_page   500 502 503 504  /50x.html;
  location = /50x.html {
    root   /usr/share/nginx/html;
  }
}


server {
 # 支持ACME协议自动https证书申请  webroot模式
  location /.well-known/acme-challenge/ {
      default_type "text/plain";
      root /usr/share/nginx/html; # -w 为站点目录
  }
}

server {
  listen 80;
  listen [::]:80;
  server_name app.panweiji.com;
  rewrite ^/(.*) https://h5.panweiji.com/download;
  # return 301 https://h5.panweiji.com/download;
}

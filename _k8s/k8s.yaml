apiVersion: apps/v1
kind: Deployment
metadata:
  name: {APP_NAME}-deployment
  namespace: default
  labels:
    app: {APP_NAME}
spec:
  replicas: 3
  #minReplicas: 2                    #最小副本数
  #maxReplicas: 10                   #最大副本数
  selector:
    matchLabels:
      app: {APP_NAME}
  template:
    metadata:
      labels:
        app: {APP_NAME}
    spec:
      containers:
      - name: {APP_NAME}
        image: {IMAGE_URL}:{IMAGE_TAG}
        imagePullPolicy: Always       # 强制拉取线上镜像
#        resources:
#          requests:
#            memory: {MEMORY_SIZE}i
#          limits:
#            memory: {MEMORY_SIZE}i
        ports:
        - containerPort: {CONTAINER_PORT}
        env:
          - name: SPRING_PROFILES_ACTIVE
            value: {SPRING_PROFILE}
      restartPolicy: Always # 停机总是重启
#      affinity: # 使用工作负载反亲和特性，让Pod之间尽量“互斥”，能尽量均匀的分布在各node节点上
#        nodeAffinity: # 工作负载反亲和
#          requiredDuringSchedulingIgnoredDuringExecution: # 尽量满足如下条件
#             nodeSelectorTerms:
#               - matchExpressions:
#                    - key: app
#                      operator: In
#                      values:
#                        - {APP_NAME}
      # 私有镜像拉取密钥配置 文档：https://docs.ksyun.com/documents/5482
      imagePullSecrets:
        - name: lannengkeji2022

---

apiVersion: v1
kind: Service

metadata:
  name: {APP_NAME}-service
  namespace: default
  labels:
    app: {APP_NAME}-service

spec:
  type: LoadBalancer                   # 规格类型NodePort、LoadBalancer、Ingress实现Pod外网访问和负载均衡
  selector:
    app: {APP_NAME}                    # 通过Pod的labels指定Pod 建立关联
  ports:
    - name: {APP_NAME}
      port: {HOST_PORT}                # 指定Service接收请求的端口
      targetPort: {CONTAINER_PORT}     # 请求转发的端口 容器内部端口
      #nodePort: {HOST_PORT}           # NodePort类型端口区间 30000–32767
      protocol: TCP                    # 定义通信协议

# 正反向代理和负载均衡配置 IDEA内Nginx Configuration检测配置正确性
# 执行命令 sudo nginx -t -c /etc/nginx/nginx.conf nginx配置有效性 , 避免上线导致服务器出错。 宿主机安装进入/usr/local/nginx/sbin 执行./nginx -t 命令
# docker exec proxy-nginx nginx -t -c /etc/nginx/nginx.conf
# docker exec proxy-nginx nginx -s reload  重新加载 配置生效 用户无感知  静态资源部署不需要重启

server {
    listen 80;
    listen [::]:80; # ipv6 网络适配
    absolute_redirect off; # 使用相对路径跳转 解决内外端口不一致情况下重定向导致端口丢失(默认成80)的问题

    root /usr/share/nginx/html; # root位置可指定不同的静态文件位置 放在不同server内用于不同项目部署到同一个nginx服务中
    include /etc/nginx/mime.types; # 用途互联网邮件扩展类型 记录MIME类型与文件后缀的映射关系
    client_max_body_size 1024m; # 限制上传文件的大小 默认值为1M

    location / {
      index index.html; # 如果部署代码根目录不是index.html名入口请重新命名为index.html规范固定名
      try_files $uri $uri/ /index.html;  # 匹配不到任何静态资源，跳到同一个index.html

      # 高级协议下 启用 Early Hints 加速Web首页预加载速度
      # early_hints $http2$http3;
    }

    # 关闭日志减少磁盘空间占用
    access_log off;

    # 对HTML文件不缓存 部署后立刻生效
    location = /index.html$ {
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        expires -1; # 不缓存
    }

    # 带 Hash 的静态资源 - 长久缓存
     location ~* \.(css|js)(\?v=\w+|\.[\w\d]+\.(css|js))$ {
         expires max;
         add_header Cache-Control "public, immutable";
     }

    # 普通 CSS/JS 缓存，避免频繁请求
    location ~* \.(css|js)$ {
       # 针对Webpack/Vite等构建工具 检查文件名是否包含哈希（8位以上字母数字）
        if ($uri ~ "[\w]{8,}\.(css|js)$") {
            expires 1y;
            add_header Cache-Control "public, immutable";
            break;
         }
        expires 7d;
        add_header Cache-Control "public";
    }

    # 静态资源缓存提高性能
    location ~ .*\.(gif|jpg|jpeg|png|json|txt|ico|cur|heic|webp|avif|pdf|doc|docx|xlsx|xls|md|mdx|tiff?|mp3|m4a|aac|ogg|midi?|wav|mp4|mov|webm|mpe?g|avi|ogv|flv|wmv|svgz|ttf|ttc|otf|eot|woff2)$ {
        expires 30d;
        add_header Access-Control-Allow-Origin "*";
        add_header Cache-Control "public";
        access_log off;
    }

    # 兼容 Uncaught SyntaxError: Unexpected token < 错误
    location ~ .(static)/(js|css|media)/(.+)$ {
    		try_files $uri $uri/ /$1/$2/$3;
    }

   # 本配置是默认标准配置 如果需要定制化特殊化需求和CORS跨域问题可在部署的时候动态替换本文件！！！
   # 自己前端url和api服务地址一致情况 根据api path路径匹配直接代理到目标服务端ip地址  添加 location ^~/api/ {} 跳转

   # redirect server error pages to the static page /50x.html
    #error_page   403 /index.html;
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
      root   /usr/share/nginx/html;
    }

   # Gzip压缩
    gzip on;
    gzip_proxied any;
    gzip_min_length 1k;
    gzip_comp_level 6;
    gzip_types text/plain application/javascript application/x-javascript text/css text/xml application/json application/xml application/atom+xml application/rss+xml text/javascript application/x-httpd-php image/jpeg image/gif image/png image/svg+xml;
    gzip_vary on;
    gzip_disable "MSIE [1-6]\.";
}


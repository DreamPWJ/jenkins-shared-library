# Author: 潘维吉
# Version 1.0.0
# Description: 自定义K8S云原生构建部署环境

ARG K8S_VERSION
ARG HELM_VERSION
ARG PYTHON_VERSION

# 使用最新的Ubuntu作为基础镜像
FROM ubuntu:latest

# 设置工作目录
WORKDIR /app

# 指定切换用户
USER root

# 设置非交互式安装以避免提示
ENV DEBIAN_FRONTEND=noninteractive

# 更新包列表并安装基本工具
RUN apt-get update && apt-get install -y \
    curl \
    wget \
    gnupg \
    lsb-release \
    software-properties-common

# 安装kubectl  官方地址 dl.k8s.io
ARG K8S_MIRROR=https://dl.k8s.lanneng.tech
RUN curl -LO "${K8S_MIRROR}/release/$(curl -L -s ${K8S_MIRROR}/release/stable.txt)/bin/linux/amd64/kubectl" \
    && chmod +x kubectl \
    && mv kubectl /usr/local/bin/

# 安装helm 官方地址 baltocdn.com/helm
#ARG HELM_MIRROR=baltocdn.com/helm
#RUN curl ${HELM_MIRROR}/signing.asc | gpg --dearmor | tee /usr/share/keyrings/helm.gpg > /dev/null \
#    && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] ${HELM_MIRROR}/stable/debian/ all main" | tee /etc/apt/sources.list.d/helm-stable-debian.list \
#    && apt-get update \
#    && apt-get install -y helm \
#    && rm -rf /var/lib/apt/lists/*

# 安装Python 3和pip  Ubuntu系统默认自带Python环境
RUN apt-get install -y python3 python3-pip \
    && python -m venv venv

# Python动态处理yaml文件
RUN  pip install ruamel.yaml

# 验证服务是否安装成功
RUN kubectl version --client &&  python3 -V
# && helm version

# 设置默认命令
CMD ["/bin/bash"]


# 自定义构建镜像
# DOCKER_BUILDKIT=1 docker build -t panweiji/k8s:latest  -f /my/Dockerfile.k8s . --no-cache
# 上传镜像 先 docker login 登录
# docker push panweiji/k8s:latest